plugins {
	id 'maven-publish'
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'maven-publish'

	repositories {
		mavenLocal()
		mavenCentral()

		maven {
			url = "https://maven.quiltmc.org/repository/release/"
		}
		maven {
			url = "https://maven.fabricmc.net/"
		}
		// remove when ASM fix is released
		maven {
			url = "https://repository.ow2.org/nexus/content/repositories/snapshots/"
		}
	}

	dependencies {
		implementation libs.guava
		implementation libs.gson

		implementation libs.bundles.tinylog

		testImplementation libs.junit
		testRuntimeOnly libs.junit.engine
		testRuntimeOnly libs.junit.launcher
		testImplementation libs.hamcrest
	}

	group = 'org.quiltmc'
	version = '2.4.2'

	var ENV = System.getenv()
	version = version + (ENV.GITHUB_ACTIONS ? (ENV.SNAPSHOTS_URL ? "-SNAPSHOT" : "") : "+local")

	java {
		withSourcesJar()
		sourceCompatibility = JavaVersion.VERSION_17
		targetCompatibility = JavaVersion.VERSION_17
	}

	tasks.withType(JavaCompile).configureEach {
		it.options.encoding = "UTF-8"

		it.options.release = 17
	}

	test {
		useJUnitPlatform()
	}

//	publishing {
//		publications {
//			"$project.name"(MavenPublication) {
//				groupId project.group
//				artifactId project.name
//				version project.version
//				from components.java
//			}
//		}
//	}
}

allprojects {
	publishing {
		repositories {
			mavenLocal()

			def ENV = System.getenv()
			if (ENV.MAVEN_URL) {
				maven {
					url ENV.MAVEN_URL
					credentials {
						username ENV.MAVEN_USERNAME
						password ENV.MAVEN_PASSWORD
					}
				}
			} else if (ENV.SNAPSHOTS_URL) {
				maven {
					url ENV.SNAPSHOTS_URL
					credentials {
						username ENV.SNAPSHOTS_USERNAME
						password ENV.SNAPSHOTS_PASSWORD
					}
				}
			}
		}
	}
}
