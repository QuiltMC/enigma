plugins {
    id 'application'
    alias(libs.plugins.shadow)
}

dependencies {
    implementation project(':enigma')
    implementation project(':enigma-server')

    implementation libs.jopt
    implementation libs.flatlaf
    implementation libs.flatlaf.extras // for SVG icons
    implementation libs.syntaxpane
    implementation libs.swing.dpi
    implementation libs.fontchooser
}

mainClassName = 'cuchaz.enigma.gui.Main'

jar.manifest.attributes 'Main-Class': mainClassName

def registerTestTask(String name) {
    tasks.register("${name}TestGui", JavaExec.class) {
        group("test")
        dependsOn(":enigma:${name}TestObf")
        mainClass = mainClassName
        classpath = sourceSets.main.runtimeClasspath

        def jar = project(":enigma").file("build/test-obf/${name}.jar")
        def mappings = file("mappings/${name}")
        args('-jar', jar, '-mappings', mappings)
        doFirst {
            mappings.mkdirs()
        }
    }
}

project(":enigma").file("src/test/java/cuchaz/enigma/inputs").listFiles().each {
    if (it.directory) {
        registerTestTask(it.name)
    }
}

registerTestTask("complete")

publishing {
    publications {
        "$project.name"(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version
            from components.java
        }
    }
}
